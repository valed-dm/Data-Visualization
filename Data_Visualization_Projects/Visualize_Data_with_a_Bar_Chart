<script src="https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js"></script>
<script src="https://d3js.org/d3.v7.min.js"></script>

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>D3: Bar Chart</title>
  <style>
    body {
      background-color: royalblue;
    }

    #tooltip {
      position: absolute;
      text-align: center;
      width: 80px;
      height: 28px;
      padding-bottom: 4px;
      font: 10px sans-serif;
      background: DarkSlateGray;
      color: white;
      border: 0px;
      border-radius: 3px;
      pointer-events: none;
      opacity: 0;
    }

    #my_chart {
      display: block;
      width: 736px;
      height: 414px;
      margin: 15vh auto;
      border-radius: 4px;
      background-color: Lavender;
      box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.7);
    }

    .bar:hover {
      fill: DarkSlateGray;
    }
  </style>
</head>

<body>
  <div id="tooltip">test phrase</div>
  <svg id="my_chart">
    <text x="50%" y=30 text-anchor="middle" font-style="italic" font-family="arial" id="title">USA GDP by year / 1947 - 2015 /</text>
    <text x="50%" y=55 text-anchor="middle" font-size="16px" font-style="italic" font-family="arial" id="sub_title">(divided by quarters)</text>
    <text x="50%" y=400 text-anchor="middle" font-size="12px" font-style="italic" font-family="arial" id="text_under_xAxis">For more information please refer to: https://www.bea.gov/data/gdp/gross-domestic-product</text>
    <text x=12 y=35 font-size="12px" font-style="italic" font-family="arial" id="yAxis_measure_units">billions of dollars</text>
    <text x=0 y=200 font-size="12px" font-style="italic" font-family="arial" transform="rotate(-90 70,200)" id="yAxis_vertical_text">Gross Domestic Product in USA</text>
  </svg>

  <script>
    let json = {};
    let dataset = [];
    const w = 736;
    const h = 414;
    const padding = 50;
    const Q = function(currentDate) {
      let date_to_array = currentDate.split("-");
      switch (date_to_array[1]) {
        case "01":
          return date_to_array[0] + ", " + "Q1";
          break;
        case "04":
          return date_to_array[0] + ", " + "Q2";
          break;
        case "07":
          return date_to_array[0] + ", " + "Q3";
          break;
        case "10":
          return date_to_array[0] + ", " + "Q4";
          break;
      };
    };
    const V = function(currentValue) {
      return "$" + currentValue + " B";
    };
    document.addEventListener('DOMContentLoaded', function() {
      const req = new XMLHttpRequest();
      req.open("GET", 'https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/GDP-data.json', true);
      req.send();
      req.onload = function() {
        json = JSON.parse(req.responseText);
        dataset = json.data; /*this array contains input data from XMLHttpRequest*/
        /*code below this line gets time range from input data*/
        const minDate = dataset[0][0];
        const maxDate = dataset[dataset.length - 1][0];
        /*code above this line gets time range from input data*/
        /*code below searches for max GDP value to arrange Y-axis scale*/
        const maxGDP = d3.max(dataset, (d) => d[1]);
        /*code above searches for max GDP value to arrange Y-axis scale*/
        const xScale = d3.scaleTime()
          .domain([new Date(minDate), new Date(maxDate)])
          .range([padding, w - padding]);
        const yScale = d3.scaleLinear()
          .domain([0, maxGDP])
          .range([h - padding, padding]);
        const svg = d3.select(document.getElementById("my_chart"))
          .append("svg")
          .style("width", w)
          .style("height", h)
        svg.selectAll("rect")
          .data(dataset)
          .enter()
          .append("rect")
          .attr("x", (d, i) => padding + (w - 2 * padding) / dataset.length * i)
          .attr("y", (d, i) => yScale(d[1]))
          .attr("width", (w - 2 * padding) / dataset.length)
          .attr("height", (d, i) => (h - padding) - yScale(d[1]))
          .attr("fill", "teal")
          .attr("class", "bar")
          .attr("data-date", (d, i) => d[0])
          .attr("data-gdp", (d, i) => d[1])
          .on("mouseover", function(object_mouseEvent, d) {
            /*function(object_mouseEvent, d) {
              console.log(object_mouseEvent, d, this);
            }); - this helps to have a look at data given as "mouseover" result*/
            d3.select("#tooltip")
              .style("opacity", .9)
              .html(Q(d[0]) + "<br/>" + V(d[1]))
              .attr("data-date", d[0])
          })
          .on('mouseout', function() {
            d3.select("#tooltip").style('opacity', 0)
          })
          .on('mousemove', (event) => {
           var coords = [event.pageX, event.pageY];
            d3.select("#tooltip")
              .style("left", coords[0] + 5 + "px")
              .style("top", coords[1] - 50 + "px")
          });
        const xAxis = d3.axisBottom(xScale);
        svg.append("g")
          .attr("transform", "translate(0," + (h - padding) + ")")
          .attr("id", "x-axis")
          .call(xAxis);
        const yAxis = d3.axisLeft(yScale);
        svg.append("g")
          .attr("transform", "translate(" + padding + ", 0)")
          .attr("id", "y-axis")
          .call(yAxis);
      };
    });
  </script>
</body>

</html>